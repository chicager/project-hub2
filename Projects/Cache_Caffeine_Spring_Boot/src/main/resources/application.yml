spring:
  application:
    name: Cache_Caffeine_Spring_Boot
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  h2:
    console:
      enabled: true
      path: /h2-console

logging:
  level:
#    Устанавливает базовый уровень логирования для всего приложения
#    Более специфичные настройки для конкретных пакетов имеют приоритет над root (т. е. наши пакеты ниже)
#    Таким образом, мы получаем:
#      Общий уровень INFO для всего приложения
#      Подробные логи (TRACE) для кеширования и нашего приложения
#      Очень подробные логи (TRACE) для SQL-запросов
    root: INFO
#    Устанавливаем уровень DEBUG для пакета org.springframework.cache
#    Если мы не укажем этот пакет, то не увидим логи как spring работает с кэшем
#    Если бы мы указали root: DEBUG, вместо наших пакетов, то это означало бы, что мы хотим видеть все логи
#    уровня DEBUG для всего приложения, включая:
#      Все пакеты Spring Framework
#      Все пакеты Hibernate
#      Все пакеты нашего приложения
#      Все пакеты зависимостей
#    Это было бы избыточным и создало бы слишком много шума в логах. Мы бы увидели:
#      Логи инициализации Spring
#      Логи работы Hibernate
#      Логи работы кеша
#      Логи работы нашего приложения
#      Логи работы других компонентов
#    Это как если бы мы включили все камеры наблюдения в огромном торговом центре,
#    вместо того чтобы следить только за важными для нас местами.
#    Поэтому лучше указывать конкретные пакеты, которые нас интересуют.
    org.springframework.cache: TRACE
#    Устанавливаем уровень DEBUG для пакета org.example.cache_caffeine_spring_boot
    org.example.cache_caffeine_spring_boot: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
#    Устанавливаем более подробный формат логов с временем и уровнем через паттерн
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"