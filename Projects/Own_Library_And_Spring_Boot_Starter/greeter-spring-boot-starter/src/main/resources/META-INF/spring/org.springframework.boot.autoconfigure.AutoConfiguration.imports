# Папка META-INF - это специальная директория в Java-проектах, которая содержит метаданные и конфигурационные файлы.
# Она играет важную роль в Java-экосистеме:
#   Обнаружение ресурсов и конфигураций:
#     Spring Boot ищет свои конфигурационные файлы именно в META-INF
#     Другие фреймворки тоже используют эту папку для своих конфигураций
#   Информация о сборке:
#     В META-INF/MANIFEST.MF хранится информация о версии, авторе, точке входа в приложение
#     Эта информация используется при упаковке в JAR/WAR файлы
#   Сервисы и расширения:
#     Java использует META-INF/services для механизма Service Provider Interface (SPI)
#     Это позволяет обнаруживать и подключать реализации интерфейсов автоматически
#   Spring Boot специфичные файлы:
#     META-INF/spring для автоконфигураций (как в нашем случае)
#     META-INF/spring.factories (в старых версиях)
#     Файлы для дополнительных возможностей Spring
# По сути, META-INF - это стандартное место, где Java и различные фреймворки ищут информацию о том,
# как настроить и запустить приложение. Это как "инструкция по сборке" для Java-приложения.

##############################################################################################

# Этот файл нужен для автоматической настройки Spring Boot приложения. Объясню простым языком:
#   Когда мы создаем стартер (как наш greeter-spring-boot-starter), мы хотим,
#   чтобы все его настройки подключались автоматически, когда кто-то добавляет наш стартер в свой проект
#
#   Файл AutoConfiguration.imports говорит Spring Boot: "Эй, когда кто-то подключит мой стартер,
#   автоматически подгрузи вот этот класс с настройками (GreeterAutoConfiguration)"
#
#   Благодаря этому пользователю нашей библиотеки не нужно ничего дополнительно настраивать - он просто
#   добавляет зависимость на наш стартер в pom.xml, и всё начинает работать
#
# Пример:
#   Мы создали стартер с классом GreeterAutoConfiguration
#   Указали его в AutoConfiguration.imports
#   Пользователь добавил нашу зависимость в свой проект
#   Spring Boot видит файл AutoConfiguration.imports
#   Автоматически подгружает GreeterAutoConfiguration
#   Все бины и настройки из этого класса становятся доступны в приложении пользователя
#   Без этого файла пользователю пришлось бы вручную импортировать наши конфигурации или добавлять дополнительные аннотации, что не очень удобно.

##############################################################################################

com.example.greeter.autoconfigure.GreeterAutoConfiguration